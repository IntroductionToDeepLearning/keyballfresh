#define DEFAULT 0
#define NUM     1
#define SYM     2
#define FUN     3
#define MOUSE   4
#define SCROLL  5
#define SNIPE   6

#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&lt {
    tapping-term-ms = <240>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
    quick-tap-ms = <150>;
};

&caps_word { continue-list = <UNDERSCORE MINUS>; };

/ {
    // custom shift using mod-morph 

    behaviors {
        cmqus: comma_question {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_QUESTION";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp QUESTION>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dtsmi: dot_semi {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_SEMI";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp SEMI>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        apo_quote_tap: apo_quote_tap {
            compatible = "zmk,behavior-tap-dance";
            label = "APO_QUOTE_TAP";
            #binding-cells = <0>;
            bindings = <&kp APOS>, <&kp DOUBLE_QUOTES>;
        };

        minus_plus_tap: minus_plus_tap {
            compatible = "zmk,behavior-tap-dance";
            label = "MINUS_PLUS_TAP";
            #binding-cells = <0>;
            bindings = <&kp MINUS>, <&kp PLUS>;
        };

        x_equals_tap: x_equals_tap {
            compatible = "zmk,behavior-tap-dance";
            label = "X_EQUALS_TAP";
            #binding-cells = <0>;
            bindings = <&kp X>, <&kp EQUAL>;

            tapping-term-ms = <175>;
        };

        gui_tap: gui_tap {
            compatible = "zmk,behavior-tap-dance";
            label = "GUI_TAP";
            #binding-cells = <0>;
            bindings = <&kp LEFT_GUI>, <&sl 8>;

            tapping-term-ms = <250>;
        };

        alt_tap: alt_tap {
            compatible = "zmk,behavior-tap-dance";
            label = "ALT_TAP";
            #binding-cells = <0>;
            bindings = <&kp LEFT_ALT>, <&sl 9>;

            tapping-term-ms = <250>;
        };
    };

    combos {
        compatible = "zmk,combos";

        semicolon_combo {
            bindings = <&kp SEMI>;
            key-positions = <33 32>;
        };

        scroll {
            bindings = <&mo 6>;
            key-positions = <19 20 21>;
        };

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <14 15 16 13>;
        };

        numlock {
            bindings = <&tog 4>;
            key-positions = <27 29 28>;
        };

        wa {
            bindings = <&kp LG(LS(P))>;
            key-positions = <9 10 11>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "QWERTY";
            bindings = <
&kp TAB           &kp Q     &kp W          &kp E         &kp R        &kp T                     &kp Y                  &kp U  &kp I      &kp O    &kp P        &minus_plus_tap
&lt 1 ESCAPE      &kp A     &kp S          &kp D         &kp F        &kp G                     &kp H                  &kp J  &kp K      &kp L    &lt 7 COLON  &apo_quote_tap
&kp LEFT_SHIFT    &kp Z     &x_equals_tap  &kp C         &kp V        &kp B                     &kp N                  &kp M  &kp COMMA  &kp DOT  &kp SLASH    &kp UNDER
&kp LEFT_CONTROL  &alt_tap  &gui_tap       &lt 2 ESCAPE  &lt 1 SPACE             &kp BACKSPACE  &mt RIGHT_SHIFT ENTER                                          &tog 10
            >;
        };

        symbol_nav {
            label = "NAV";
            bindings = <
&kp TAB  &kp EXCL  &kp HOME   &kp UP          &kp END    &kp DOLLAR              &kp ASTERISK   &kp LBKT              &kp RBKT               &kp GRAVE         &kp PIPE   &minus_plus_tap
&trans   &kp AT    &kp LEFT   &kp DOWN_ARROW  &kp RIGHT  &kp HASH                &kp CARET      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp AMPS          &kp COLON  &apo_quote_tap
&trans   &kp DEL   &kp EQUAL  &kp PG_UP       &kp PG_DN  &kp TILDE               &kp LESS_THAN  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp GREATER_THAN  &kp QMARK  &kp UNDER
&trans   &trans    &trans     &trans          &trans                     &trans  &trans                                                                                   &trans
            >;
        };

        num_homerow {
            label = "Num";
            bindings = <
&kp TAB  &kp EXCL  &kp AT     &kp HASH  &kp DOLLAR  &kp PERCENT              &kp ASTERISK   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LEFT_BRACE    &kp RIGHT_BRACE  &minus_plus_tap
&trans   &kp N1    &kp N2     &kp N3    &kp N4      &kp N5                   &kp N6         &kp N7                &kp N8                 &kp N9            &kp N0           &apo_quote_tap
&trans   &kp PLUS  &kp EQUAL  &kp PIPE  &kp GRAVE   &kp TILDE                &kp LESS_THAN  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp GREATER_THAN  &kp QMARK        &kp UNDER
&trans   &trans    &trans     &trans    &trans                       &trans  &trans                                                                                         &trans
            >;
        };

        numerical {
            label = "NUM";
            bindings = <
&kp TAB    &kp SLASH     &kp N7   &kp N8  &kp N9  &kp ASTERISK              &kp ASTERISK   &kp LBKT              &kp RBKT               &kp GRAVE         &kp PIPE   &minus_plus_tap
&trans     &kp MINUS     &kp N4   &kp N5  &kp N6  &kp PLUS                  &kp MINUS      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp PERCENT       &kp COLON  &apo_quote_tap
&trans     &kp NUMBER_0  &kp N1   &kp N2  &kp N3  &kp EQUAL                 &kp LESS_THAN  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp GREATER_THAN  &kp QMARK  &kp UNDER
&kp COMMA  &kp N0        &kp DOT  &trans  &trans                    &trans  &trans                                                                                   &trans
            >;
        };

        function_layer {
            label = "FUN";
            bindings = <
&none   &kp BSPC  &kp F7  &kp F8  &kp F9  &kp F10              &none  &none  &none  &none  &none  &none
&none   &kp BSPC  &kp F4  &kp F5  &kp F6  &kp F11              &none  &none  &none  &none  &none  &none
&none   &kp BSPC  &kp F1  &kp F2  &kp F3  &kp F12              &none  &none  &none  &none  &none  &none
&trans  &trans    &trans  &trans  &trans               &trans  &mo 4                              &trans
            >;
        };

        mouse_layer {
            label = "MOUSE";
            bindings = <
&none   &kp Q           &kp W           &kp E         &kp R      &kp T              &kp Y          &kp U      &kp I      &kp O  &kp P  &none
&none   &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT  &none              &kp PAGE_UP    &mkp LCLK  &mkp RCLK  &mo 7  &mo 7  &none
&none   &none           &none           &none         &none      &none              &kp PAGE_DOWN  &none      &none      &none  &none  &none
&trans  &trans          &trans          &trans        &trans                &trans  &trans                                             &none
            >;
        };

        scroll_layer {
            label = "SCROLL";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans              &trans  &trans                                  &trans
            >;
        };

        snipe_layer {
            label = "SNIPE";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans              &trans  &trans                                  &trans
            >;
        };

        numgui {
            label = "NUMgui";
            bindings = <
&kp TAB    &kp SLASH         &kp LG(N7)  &kp LG(N8)  &kp LG(N9)  &kp ASTERISK              &kp ASTERISK   &kp LBKT        &kp RBKT         &kp NUMBER_9      &kp NUMBER_0  &minus_plus_tap
&trans     &kp LG(N1)        &kp LG(N2)  &kp LG(N3)  &kp LG(N4)  &kp LG(N5)                &kp LG(N6)     &kp LG(N7)      &kp LG(N8)       &kp LG(N9)        &kp LG(N0)    &kp J
&kp J      &kp LG(NUMBER_0)  &kp LG(N1)  &kp LG(N2)  &kp LG(N3)  &kp EQUAL                 &kp LESS_THAN  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp GREATER_THAN  &kp QMARK     &kp UNDER
&kp COMMA  &kp LG(N0)        &kp DOT     &trans      &trans                        &trans  &trans                                                                          &trans
            >;
        };

        numalt {
            label = "NUMalt";
            bindings = <
&kp TAB    &kp SLASH         &kp LA(N7)  &kp LA(N8)  &kp LA(N9)  &kp ASTERISK              &kp ASTERISK   &kp LBKT        &kp RBKT         &kp NUMBER_9      &kp NUMBER_0  &minus_plus_tap
&trans     &kp LA(N1)        &kp LA(N2)  &kp LA(N3)  &kp LA(N4)  &kp LA(N5)                &kp LA(N6)     &kp LA(N7)      &kp LA(N8)       &kp LA(N9)        &kp LA(N0)    &apo_quote_tap
&trans     &kp LA(NUMBER_0)  &kp LA(N1)  &kp LA(N2)  &kp LA(N3)  &kp EQUAL                 &kp LESS_THAN  &kp LEFT_BRACE  &kp RIGHT_BRACE  &kp GREATER_THAN  &kp QMARK     &kp UNDER
&kp COMMA  &kp LA(N0)        &kp DOT     &trans      &trans                        &trans  &trans                                                                          &trans
            >;
        };

        colemak {
            label = "colemak";
            bindings = <
&kp TAB           &kp Q     &kp W          &kp F         &kp P        &kp B                     &kp J                  &kp L  &kp U      &kp Y    &kp COLON  &minus_plus_tap
&kp J             &kp A     &kp R          &kp S         &kp T        &kp J                     &kp M                  &kp N  &kp E      &kp I    &lt 7 O    &apo_quote_tap
&kp LEFT_SHIFT    &kp Z     &x_equals_tap  &kp C         &kp V        &kp B                     &kp K                  &kp H  &kp COMMA  &kp DOT  &kp SLASH  &kp UNDER
&kp LEFT_CONTROL  &alt_tap  &gui_tap       &lt 2 ESCAPE  &lt 1 SPACE             &kp BACKSPACE  &mt RIGHT_SHIFT ENTER                                        &tog 0
            >;
        };
    };
};
